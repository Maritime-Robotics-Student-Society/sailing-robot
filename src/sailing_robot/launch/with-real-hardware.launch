<launch>
    <!--
    General test file to launch all existing nodes to talk to real hardware
    -->

    <!--
    Parameters
    -->

    <rosparam file="$(find sailing_robot)/launch/parameters/default.yaml" command="load"/>

    <rosparam file="$(find sailing_robot)/launch/parameters/calibration_laser.yaml" ns="/calibration" command="load"/>

    <rosparam file="$(find sailing_robot)/launch/parameters/boldrewood_waypoints.yaml" command="load"/>

    <!--
    Nodes
    -->
    <!-- These are currently dummies, need to be replaced with real nodes -->
    <!-- <node name="dummy_heading" pkg='sailing_robot' type="dummy_heading"/> -->
    <node name="sensor_gps" pkg='sailing_robot' type="sensor_gps"/>
    <!--<node name = "heading_control" pkg="sailing_robot" type = "heading_control" />-->
    <node name = "tasks" pkg="sailing_robot" type = "tasks" />
    <node name = "tack" pkg="sailing_robot" type = "tack" />
    <node name = "actuator_demand_rudder" pkg="sailing_robot" type = "actuator_demand_rudder" />
    <node name = "actuator_demand_sail" pkg="sailing_robot" type = "actuator_demand_sail" />
    <node name = "sensor_imu" pkg="sailing_robot" type="sensor_imu" />
    <node name = "actuator_driver_servos" pkg="sailing_robot" type="actuator_driver_servos" />
    <node name = "sensor_wind_direction" pkg="sailing_robot" type="sensor_wind_direction" />
    <node name = "debugging_blink_on_sailing_state" pkg="sailing_robot" type="debugging_blink_on_sailing_state" />

    <!-- Rosbag records messages for later investigation -->
    <!-- <node name="record" pkg="rosbag" type="record" args="-a -o /home/pi/sailing-record"/> -->
    <!-- Also record GPS data as required by the competition -->
    <node name="debugging_gps_log" pkg='sailing_robot' type="debugging_gps_log"/>

    <!-- Serve an HTML dashboard so we can see what's going on -->
    <node name = "debugging_dashboard" pkg="sailing_robot" type = "debugging_dashboard" />

    <!--
    Launch Bridge to Arduino
    -->
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="9600"/>
  </node>
 </launch>
